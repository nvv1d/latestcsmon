~/workspace$ python setup.py
/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/config/_apply_pyprojecttoml.py:75: _MissingDynamic: `readme` defined outside of `pyproject.toml` is ignored.
!!

        ********************************************************************************
        The following seems to be defined outside of `pyproject.toml`:

        `readme = '# Sesame AI Python Client\n\nAn unofficial Python client library for interacting with the [Sesame](https://www.sesame.com) voice conversation API. This package provides easy access to Sesame\'s voice-based AI characters, allowing developers to create applications with natural voice conversations.\n\n## About Sesame\n\nSesame is developing conversational AI with "voice presence" - the quality that makes spoken interactions feel real, understood, and valued. Their technology enables voice conversations with AI characters like Miles and Maya that feature emotional intelligence, natural conversational dynamics, and contextual awareness.\n\n## Support\n\nIf you find this project helpful, consider buying me a coffee!\n\n[![Buy Me A Coffee](https://img.shields.io/badge/Buy%20Me%20A%20Coffee-Support-yellow.svg)](https://buymeacoffee.com/ijub)\n\n## Installation\n\n```bash\n# From GitHub\npip install git+https://github.com/ijub/sesame_ai.git\n\n# For development\ngit clone https://github.com/ijub/sesame_ai.git\ncd sesame_ai\npip install -e .\n```\n\n## Features\n\n- Authentication and account management\n- WebSocket-based real-time voice conversations\n- Token management and refresh\n- Support for multiple AI characters (Miles, Maya)\n- Voice activity detection\n- Simple and intuitive API\n\n## Available Characters\n\nThe API supports multiple AI characters:\n\n- **Miles**: A male character (default)\n- **Maya**: A female character\n\n## Quick Start\n\n### Authentication\n\n```python\nfrom sesame_ai import SesameAI, TokenManager\n\n# Create API client\nclient = SesameAI()\n\n# Create an anonymous account\nsignup_response = client.create_anonymous_account()\nprint(f"ID Token: {signup_response.id_token}")\n\n# Look up account information\nlookup_response = client.get_account_info(signup_response.id_token)\nprint(f"User ID: {lookup_response.local_id}")\n\n# For easier token management, use TokenManager\ntoken_manager = TokenManager(client, token_file="token.json")\nid_token = token_manager.get_valid_token()\n```\n\n### Voice Chat Example\n\n```python\nfrom sesame_ai import SesameAI, SesameWebSocket, TokenManager\nimport pyaudio\nimport threading\nimport time\nimport numpy as np\n\n# Get authentication token using TokenManager\napi_client = SesameAI()\ntoken_manager = TokenManager(api_client, token_file="token.json")\nid_token = token_manager.get_valid_token()\n\n# Connect to WebSocket (choose character: "Miles" or "Maya")\nws = SesameWebSocket(id_token=id_token, character="Maya")\n\n# Set up connection callbacks\ndef on_connect():\n    print("Connected to SesameAI!")\n\ndef on_disconnect():\n    print("Disconnected from SesameAI")\n\nws.set_connect_callback(on_connect)\nws.set_disconnect_callback(on_disconnect)\n\n# Connect to the server\nws.connect()\n\n# Audio settings\nCHUNK = 1024\nFORMAT = pyaudio.paInt16\nCHANNELS = 1\nRATE = 16000\n\n# Initialize PyAudio\np = pyaudio.PyAudio()\n\n# Open microphone stream\nmic_stream = p.open(format=FORMAT,\n                    channels=CHANNELS,\n                    rate=RATE,\n                    input=True,\n                    frames_per_buffer=CHUNK)\n\n# Open speaker stream (using server\'s sample rate)\nspeaker_stream = p.open(format=FORMAT,\n                        channels=CHANNELS,\n                        rate=ws.server_sample_rate,\n                        output=True)\n\n# Function to capture and send microphone audio\ndef capture_microphone():\n    print("Microphone capture started...")\n    try:\n        while True:\n            if ws.is_connected():\n                data = mic_stream.read(CHUNK, exception_on_overflow=False)\n                ws.send_audio_data(data)\n            else:\n                time.sleep(0.1)\n    except KeyboardInterrupt:\n        print("Microphone capture stopped")\n\n# Function to play received audio\ndef play_audio():\n    print("Audio playback started...")\n    try:\n        while True:\n            audio_chunk = ws.get_next_audio_chunk(timeout=0.01)\n            if audio_chunk:\n                speaker_stream.write(audio_chunk)\n    except KeyboardInterrupt:\n        print("Audio playback stopped")\n\n# Start audio threads\nmic_thread = threading.Thread(target=capture_microphone)\nmic_thread.daemon = True\nmic_thread.start()\n\nplayback_thread = threading.Thread(target=play_audio)\nplayback_thread.daemon = True\nplayback_thread.start()\n\n# Keep the main thread alive\ntry:\n    while True:\n        time.sleep(1)\nexcept KeyboardInterrupt:\n    print("Disconnecting...")\n    ws.disconnect()\n    mic_stream.stop_stream()\n    mic_stream.close()\n    speaker_stream.stop_stream()\n    speaker_stream.close()\n    p.terminate()\n```\n\nThe package also includes a full-featured voice chat example that you can run:\n\n```bash\n# Chat with Miles (default)\npython examples/voice_chat.py\n\n# Chat with Maya\npython examples/voice_chat.py --character Maya\n```\n\nCommand-line options:\n- `--character`: Character to chat with (default: Miles, options: Miles, Maya)\n- `--input-device`: Input device index\n- `--output-device`: Output device index\n- `--list-devices`: List audio devices and exit\n- `--token-file`: Path to token storage file\n- `--debug`: Enable debug logging\n\n## API Reference\n\n### SesameAI\n\nThe main API client for authentication.\n\n- `SesameAI(api_key=None)` - Create a new API client\n- `create_anonymous_account()` - Create an anonymous account\n- `get_account_info(id_token)` - Look up account information\n- `refresh_authentication_token(refresh_token)` - Refresh an ID token\n\n### TokenManager\n\nManages authentication tokens with automatic refresh and persistence.\n\n- `TokenManager(api_client=None, token_file=None)` - Create a token manager\n- `get_valid_token(force_new=False)` - Get a valid token, refreshing if needed\n- `clear_tokens()` - Clear stored tokens\n\n### SesameWebSocket\n\nWebSocket client for real-time voice conversation.\n\n- `SesameWebSocket(id_token, character="Miles", client_name="RP-Web")` - Create a new WebSocket client\n- `connect(blocking=True)` - Connect to the server\n- `send_audio_data(raw_audio_bytes)` - Send raw audio data\n- `get_next_audio_chunk(timeout=None)` - Get the next audio chunk\n- `disconnect()` - Disconnect from the server\n- `is_connected()` - Check if connected\n\n## Error Handling\n\nThe library provides several exception classes for error handling:\n\n- `SesameAIError` - Base exception class\n- `InvalidTokenError` - Invalid token errors\n- `APIError` - API errors with code and message\n- `NetworkError` - Network communication errors\n\nExample:\n\n```python\nfrom sesame_ai import SesameAI, InvalidTokenError, APIError, NetworkError\n\nclient = SesameAI()\n\ntry:\n    # Try to use an invalid token\n    client.get_account_info("invalid_token")\nexcept InvalidTokenError:\n    print("The token is invalid or expired")\nexcept APIError as e:\n    print(f"API error: {e.code} - {e.message}")\nexcept NetworkError as e:\n    print(f"Network error: {e}")\n```\n\n## Troubleshooting\n\n### Audio Device Problems\n\nIf you encounter audio device issues:\n\n1. Use `--list-devices` to see available audio devices\n2. Specify input/output devices with `--input-device` and `--output-device`\n3. Ensure PyAudio is properly installed with all dependencies\n\n### Audio Feedback Issues\n\nCurrently, the voice chat example doesn\'t block audio coming from the AI (through your speakers) from being picked up by your microphone, which can cause feedback loops. For the best experience:\n\n1. Use headphones to prevent the AI from hearing itself\n2. Keep speaker volume at a moderate level\n3. Position your microphone away from speakers if not using headphones\n\n**Note:** I\'m working on updating the `voice_chat.py` example to implement echo cancellation and audio filtering to address this issue in a future update.\n\n### Connection Issues\n\nIf you have trouble connecting:\n\n1. Check your internet connection\n2. Verify your authentication token is valid\n3. Ensure the SesameAI service is available\n\n## Legal Disclaimer\n\nThis is an unofficial API wrapper and is not affiliated with, maintained, authorized, endorsed, or sponsored by Sesame. or any of its affiliates. This wrapper is intended for personal, educational, and non-commercial use only.\n\nUsers of this library assume all legal responsibility for its use. The author(s) are not responsible for any violations of Sesame Terms of Service or applicable laws.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## Support\n\nIf you find this project helpful, consider buying me a coffee!\n\n<a href="https://buymeacoffee.com/ijub" target="_blank"><img src="https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee" style="height: 60px !important;width: 217px !important;" ></a>'`

        According to the spec (see the link below), however, setuptools CANNOT
        consider this value unless `readme` is listed as `dynamic`.

        https://packaging.python.org/en/latest/specifications/pyproject-toml/#declaring-project-metadata-the-project-table

        To prevent this problem, you can list `readme` under `dynamic` or alternatively
        remove the `[project]` table from your file and rely entirely on other means of
        configuration.
        ********************************************************************************

!!
  _handle_missing_dynamic(dist, project_table)
/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/config/_apply_pyprojecttoml.py:75: _MissingDynamic: `authors` defined outside of `pyproject.toml` is ignored.
!!

        ********************************************************************************
        The following seems to be defined outside of `pyproject.toml`:

        `authors = 'ijub'`

        According to the spec (see the link below), however, setuptools CANNOT
        consider this value unless `authors` is listed as `dynamic`.

        https://packaging.python.org/en/latest/specifications/pyproject-toml/#declaring-project-metadata-the-project-table

        To prevent this problem, you can list `authors` under `dynamic` or alternatively
        remove the `[project]` table from your file and rely entirely on other means of
        configuration.
        ********************************************************************************

!!
  _handle_missing_dynamic(dist, project_table)
/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/config/_apply_pyprojecttoml.py:75: _MissingDynamic: `keywords` defined outside of `pyproject.toml` is ignored.
!!

        ********************************************************************************
        The following seems to be defined outside of `pyproject.toml`:

        `keywords = ['sesame', 'ai', 'voice', 'api', 'wrapper', 'chatbot']`

        According to the spec (see the link below), however, setuptools CANNOT
        consider this value unless `keywords` is listed as `dynamic`.

        https://packaging.python.org/en/latest/specifications/pyproject-toml/#declaring-project-metadata-the-project-table

        To prevent this problem, you can list `keywords` under `dynamic` or alternatively
        remove the `[project]` table from your file and rely entirely on other means of
        configuration.
        ********************************************************************************

!!
  _handle_missing_dynamic(dist, project_table)
/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/config/_apply_pyprojecttoml.py:75: _MissingDynamic: `classifiers` defined outside of `pyproject.toml` is ignored.
!!

        ********************************************************************************
        The following seems to be defined outside of `pyproject.toml`:

        `classifiers = ['Programming Language :: Python :: 3', 'License :: OSI Approved :: MIT License', 'Operating System :: OS Independent', 'Development Status :: 3 - Alpha', 'Intended Audience :: Developers', 'Topic :: Software Development :: Libraries :: Python Modules']`

        According to the spec (see the link below), however, setuptools CANNOT
        consider this value unless `classifiers` is listed as `dynamic`.

        https://packaging.python.org/en/latest/specifications/pyproject-toml/#declaring-project-metadata-the-project-table

        To prevent this problem, you can list `classifiers` under `dynamic` or alternatively
        remove the `[project]` table from your file and rely entirely on other means of
        configuration.
        ********************************************************************************

!!
  _handle_missing_dynamic(dist, project_table)
/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/config/_apply_pyprojecttoml.py:75: _MissingDynamic: `optional-dependencies` defined outside of `pyproject.toml` is ignored.
!!

        ********************************************************************************
        The following seems to be defined outside of `pyproject.toml`:

        `optional-dependencies = {'dev': ['pytest>=6.0.0', 'black>=21.5b2', 'flake8>=3.9.0']}`

        According to the spec (see the link below), however, setuptools CANNOT
        consider this value unless `optional-dependencies` is listed as `dynamic`.

        https://packaging.python.org/en/latest/specifications/pyproject-toml/#declaring-project-metadata-the-project-table

        To prevent this problem, you can list `optional-dependencies` under `dynamic` or alternatively
        remove the `[project]` table from your file and rely entirely on other means of
        configuration.
        ********************************************************************************

!!
  _handle_missing_dynamic(dist, project_table)
/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/config/_apply_pyprojecttoml.py:82: SetuptoolsWarning: `install_requires` overwritten in `pyproject.toml` (dependencies)
  corresp(dist, value, root_dir)
Traceback (most recent call last):
  File "/home/runner/workspace/setup.py", line 8, in <module>
    setup(
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/__init__.py", line 117, in setup
    return distutils.core.setup(**attrs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/_distutils/core.py", line 160, in setup
    dist.parse_config_files()
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/_virtualenv.py", line 20, in parse_config_files
    result = old_parse_config_files(self, *args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/dist.py", line 756, in parse_config_files
    pyprojecttoml.apply_configuration(self, filename, ignore_option_errors)
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/config/pyprojecttoml.py", line 73, in apply_configuration
    return _apply(dist, config, filepath)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/config/_apply_pyprojecttoml.py", line 54, in apply
    _apply_project_table(dist, config, root_dir)
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/config/_apply_pyprojecttoml.py", line 82, in _apply_project_table
    corresp(dist, value, root_dir)
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/config/_apply_pyprojecttoml.py", line 187, in _long_description
    file = val.get("file") or ()
           ^^^^^^^
AttributeError: 'NoneType' object has no attribute 'get'
~/workspace$ python setup.py
configuration error: `tool.setuptools.dynamic.optional-dependencies.file` must be object
DESCRIPTION:
    Value is read from a file (or list of files and then concatenated)

GIVEN VALUE:
    [
        "optional-dependencies.txt"
    ]

OFFENDING RULE: 'type'

DEFINITION:
    {
        "$id": "#/definitions/file-directive",
        "title": "'file:' directive",
        "type": "object",
        "additionalProperties": false,
        "properties": {
            "file": {
                "oneOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "required": [
            "file"
        ]
    }
Traceback (most recent call last):
  File "/home/runner/workspace/setup.py", line 8, in <module>
    setup(
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/__init__.py", line 117, in setup
    return distutils.core.setup(**attrs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/_distutils/core.py", line 160, in setup
    dist.parse_config_files()
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/_virtualenv.py", line 20, in parse_config_files
    result = old_parse_config_files(self, *args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/dist.py", line 756, in parse_config_files
    pyprojecttoml.apply_configuration(self, filename, ignore_option_errors)
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/config/pyprojecttoml.py", line 72, in apply_configuration
    config = read_configuration(filepath, True, ignore_option_errors, dist)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/config/pyprojecttoml.py", line 140, in read_configuration
    validate(subset, filepath)
  File "/home/runner/workspace/.pythonlibs/lib/python3.12/site-packages/setuptools/config/pyprojecttoml.py", line 61, in validate
    raise ValueError(f"{error}\n{summary}") from None
ValueError: invalid pyproject.toml config: `tool.setuptools.dynamic.optional-dependencies.file`.
configuration error: `tool.setuptools.dynamic.optional-dependencies.file` must be object